<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Reflection" #>
<#@ assembly name="$(SolutionDir)\HxBlogs.Model\bin\Debug\HxBlogs.Model.dll" #>
<#@ output extension=".cs" #>
using HxBlogs.Model;
namespace HxBlogs.IBLL
{
<#
	Type baseType = typeof(HxBlogs.Model.BaseModel);
	Assembly assembly = Assembly.GetAssembly(baseType);
	Type[] types = assembly.GetExportedTypes();
	List<string> classList = new List<string>();
    foreach (Type type in types)
    {
        if (baseType.IsAssignableFrom(type) && !type.IsAbstract)
        {
            classList.Add(type.Name);
        }
    }
	foreach(string name in classList)
	{
#>
	public partial interface I<#=name#>Service:IBaseService<<#=name#>>
	{
	}
<#}#>
}