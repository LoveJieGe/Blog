@model HxBlogs.WebApp.Models.RegisterViewModel
@{
    ViewBag.Title = "用户登录";
}
@section styles{
    <link href="~/Content/Plugin/Metronic/uniform/css/uniform.default.css" rel="stylesheet" />
}
<div class="content">
    @using (Ajax.BeginForm("login", "account", new { },
            new AjaxOptions()
            {
                OnBegin = "Login.beforeLogin",
                HttpMethod = "post",
                OnSuccess = "Login.afterLogin",
                OnComplete = "Login.finishLogin",
            }, new
            {
                @class = "form-vertical login-form",
                role = "form",
                id = "loginForm"
            }))
    {
        <h3 class="form-title">用户登录</h3>
        
        <div class="control-group">

            <!--ie8, ie9 does not support html5 placeholder, so we just show field title for that-->
            <label class="control-label visible-ie8 visible-ie9">用户名</label>
            <div class="controls">
                <div class="input-icon left">
                    @*<i class="fa fa-user"></i>*@
                    <i class="glyphicon glyphicon-user" style="top:initial;"></i>
                    <input class="m-wrap placeholder-no-fix" type="text" placeholder="用户名/邮箱" name="UserName" />
                </div>
            </div>
        </div>
        <div class="control-group">
            <label class="control-label visible-ie8 visible-ie9">密码</label>
            <div class="controls">
                <div class="input-icon left">
                    @*<i class="fa fa-lock"></i>*@
                    <i class="glyphicon glyphicon-lock" style="top:initial;"></i>
                    <input class="m-wrap placeholder-no-fix" type="password" placeholder="密码" name="PassWord" />
                </div>
            </div>
        </div>
        <div class="control-group">
            <label class="control-label visible-ie8 visible-ie9">验证码</label>
            <div class="controls">
                <div class="input-icon left">
                    <i class="glyphicon glyphicon-sound-5-1" style="top:initial;"></i>
                    <input class="m-wrap placeholder-no-fix input-validate" type="text" placeholder="验证码" name="ValidateCode" />
                    <img id="img" class="pull-right img-validate" onclick="this.src=this.src+1" src="/Account/ShowValidateCode?id=1" title="看不清,点击换一张"/>
                </div>
            </div>
        </div>
        <div id="loginAlert" class="alert alert-warning hide">
            <a href="#" class="close" data-dismiss="alert"></a>
            <strong>登录失败! </strong><span></span>
        </div>
        <div class="form-actions">
            <label class="checkbox">
                <input type="checkbox" name="Remember" value="1" /> 记住我
            </label>
            <button type="submit" class="btn green pull-right">
                登录 <i class="m-icon-swapright m-icon-white"></i>
            </button>
        </div>
        
        <div class="forget-password">
            <h4>忘记密码?</h4>
            <p>
                不用担心, 点击 <a href="javascript:;" class="" id="forget-password">这里</a>
                找回密码.
            </p>
        </div>
            <div class="create-account">
                <p>
                    没有账号?&nbsp;
                    <a href="/register" id="register-btn" class="">注册账号</a>
                </p>
            </div>
    }
</div>
@section scripts{
<script src="~/Content/Plugin/Metronic/uniform/jquery.uniform.min.js"></script>
    <script>
        var Login = function () {
            return {
                beforeLogin:function(a,b) {
                    App.blockUI({ animate: true, message: '登陆中' });
                    b.data = b.data + '&ReturnUrl=' + $.queryString('ReturnUrl');
                },
                finishLogin:function() {
                    App.unblockUI();
                },
                afterLogin: function (data) {
                    if (data.IsSuccess) {
                        debugger
                        window.location.href = data.ReturnUrl && decodeURIComponent(data.ReturnUrl) || "/";
                    } else {
                        var alert = $('#loginAlert'),
                            span = alert.find('span');
                        span.html(data.Message);
                        alert.show();
                        setTimeout(function () {
                            alert.hide();
                        }, 2000);
                    }
                },
                init:function() {
                    $('.login-form').validate({
                        errorElement: 'label',
                        errorClass: 'help-inline',
                        focusInvalid: false,
                        rules: {
                            UserName: {required: true},
                            PassWord: { required: true },
                            ValidateCode: {
                                required: true,
                                remote: {
                                    url: 'admin/account/checkcode',
                                    type:'post',
                                    data: {
                                        code: function () {
                                            $('input.input-validate').val();
                                        }
                                    },
                                }
                            }
                        },
                        messages: {
                            UserName: '用户名/邮箱不能为空!',
                            PassWord: '密码不能为空!',
                            ValidateCode: {
                                required: '验证码不能为空!',
                                remote:'验证码不正确!'
                            }
                        },
                        //display error alert on form submit   
                        invalidHandler: function (event, validator) {
                            $('.alert-error', $('.login-form')).show();
                        },
                        // hightlight error inputs
                        highlight: function (element) { 
                            $(element)
                                .closest('.control-group').addClass('error'); // set error class to the control group
                        },
                        success: function (label) {
                            label.closest('.control-group').removeClass('error');
                            label.remove();
                        },
                        errorPlacement: function (error, element) {
                            error.addClass('help-small no-left-padding').insertAfter(element.closest('.input-icon'));
                        },

                        //submitHandler: function (form) {
                        //    window.location.href = "/";
                        //}
                    });
                }
            };
        }();
        $(function () {
            Login.init();
        });
    </script>
}
