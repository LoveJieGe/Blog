@model HxBlogs.WebApp.Models.RegisterViewModel
@{
    ViewBag.Title = "用户登录";
}
<div class="content">
    @using (Ajax.BeginForm("login", "account", new { },
                new AjaxOptions()
                {
                    OnBegin = "Login.beforeLogin",
                    HttpMethod = "post",
                    OnSuccess = "Login.afterLogin",
                    OnComplete = "Login.finishLogin",
                    OnFailure = "Login.doFailure"
                }, new
                {
                    @class = "form-vertical login-form",
                    role = "form",
                    id = "loginForm"
                }))
    {
        <h3 class="form-title">用户登录</h3>
        <input type="hidden" name="ReturnUrl" value="@ViewBag.ReturnUrl" />
        <div class="form-group">
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <div class="input-group-text">
                        <i class="fa fa-user fa-same"></i>
                    </div>
                </div>
                <input class="form-control" type="text" placeholder="用户名/邮箱" name="UserName" />
            </div>
        </div>
        <div class="form-group">
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <div class="input-group-text">
                        <i class="fa fa-lock fa-same"></i>
                    </div>
                </div>
                <input class="form-control" type="password" placeholder="密码" name="PassWord" />
            </div>
        </div>
        <div class="form-group">
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <div class="input-group-text">
                        <i class="fa fa-drivers-license"></i>
                    </div>
                </div>
                <input class="form-control" type="password" placeholder="验证码" name="ValidateCode" />
                <div class="input-group-append">
                    <div class="input-group-text" style="padding:0;">
                        <img id="img" class="img-validate" onclick="this.src=this.src+1" src="/Account/ShowValidateCode?id=1" title="看不清,点击换一张" />
                    </div>
                </div>
            </div>
        </div>

        <div id="loginAlert" class="alert alert-warning" hidden>
            <a href="#" class="close" data-dismiss="alert"></a>
            <strong>登录失败! </strong><span></span>
        </div>
            <div class="form-row">
                <div class="col" style="margin:auto;">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" name="Remember" value="Y" id="Remember">
                        <label class="custom-control-label" for="Remember">记住我</label>
                    </div>
                </div>
                <div class="col">
                    <button type="submit" class="btn btn-success pull-right">
                        登录 <i class="fa fa-arrow-circle-o-right "></i>
                    </button>
                </div>
            </div>

            <div class="forget-password">
                <h4>忘记密码?</h4>
                <p>
                    不用担心, 点击 <a href="javascript:;" class="" id="forget-password">这里</a>
                    找回密码.
                </p>
            </div>
            <div class="create-account">
                <p>
                    没有账号?&nbsp;
                    <a href="/register@(string.IsNullOrEmpty(ViewBag.ReturnUrl)?"":"?returnUrl="+ViewBag.ReturnUrl)" id="register-btn" class="">注册账号</a>
                </p>
            </div>
    }
</div>
@section scripts{
    <script>
        var Login = function () {
            return {
                beforeLogin: function (a, b) {
                    App.blockUI({ animate: true, message: '登陆中' });
                },
                finishLogin: function () {
                    App.unblockUI();
                },
                afterLogin: function (data) {
                    if (data.IsSuccess) {
                        window.location.href = data.ReturnUrl && decodeURIComponent(data.ReturnUrl) || "/";
                    } else {
                        var alert = $('#loginAlert'),
                            span = alert.find('span');
                        span.html(data.Message);
                        alert.removeClass('hide');
                        setTimeout(function () {
                            alert.addClass('hide');
                        }, 2000);
                    }
                },
                doFailure(data) {
                    var alert = $('#loginAlert'),
                        span = alert.find('span');
                    span.html(data.responseText);
                    alert.removeClass('hide');
                    setTimeout(function () {
                        alert.addClass('hide');
                    }, 2000);
                },
                init: function () {
                    $('.login-form').validate({
                        errorElement: 'label',
                        errorClass: 'help-inline',
                        focusInvalid: false,
                        rules: {
                            UserName: { required: true },
                            PassWord: { required: true },
                            ValidateCode: {
                                required: true,
                                remote: {
                                    url: 'admin/account/checkcode',
                                    type: 'post',
                                    data: {
                                        code: function () {
                                            $('input.input-validate').val();
                                        }
                                    },
                                }
                            }
                        },
                        messages: {
                            UserName: '用户名/邮箱不能为空!',
                            PassWord: '密码不能为空!',
                            ValidateCode: {
                                required: '验证码不能为空!',
                                remote: '验证码不正确!'
                            }
                        },
                        //display error alert on form submit
                        invalidHandler: function (event, validator) {
                            $('.alert-error', $('.login-form')).show();
                        },
                        // hightlight error inputs
                        highlight: function (element) {
                            $(element)
                                .closest('.control-group').addClass('error'); // set error class to the control group
                        },
                        success: function (label) {
                            label.closest('.control-group').removeClass('error');
                            label.remove();
                        },
                        errorPlacement: function (error, element) {
                            error.addClass('help-small no-left-padding').insertAfter(element.closest('.input-icon'));
                        },

                        //submitHandler: function (form) {
                        //    window.location.href = "/";
                        //}
                    });
                }
            };
        }();
        $(document).ready(function (e) {
            Login.init();
            if (window.history && window.history.pushState) {
                $(window).on('popstate', function () {
                    window.history.pushState('forward', null, '#');
                    window.history.forward(1);
                    location.replace(document.referrer);//刷新
                });
                window.history.pushState('forward', null, '#');
                window.history.forward(1);
            }
        });

    </script>
}
