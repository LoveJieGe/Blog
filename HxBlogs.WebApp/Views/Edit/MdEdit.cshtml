@model HxBlogs.WebApp.Models.EditViewModel
@{
    ViewBag.Title = "写文章";
    string blogTag = Guid.NewGuid().ToString(),
        addTag = Guid.NewGuid().ToString();
}
@section styles{
    @Styles.Render("~/content/default")
    <link href="~/Content/Plugin/editormd/css/editormd.css" rel="stylesheet" />
}
<div class="blog-edit hx-container hx-white-container px-3">
    <form class="form-horizontal" role="form" action="save" method="post">
        <input type="hidden" name="IsMarkDown" value="N" />
        <div class="form-row mb-2">
            <div class="col-md-8">
                <input type="text" name="Title" required class="form-control" data-prompt="文章标题" placeholder="文章标题,请控制在100字以内" />
            </div>
            <div class="col-md-4">
                <select class="form-control" data-prompt="系统分类" required name="CatId">
                    <option value="-1" selected="selected">请选择系统分类</option>
                    @if (ViewBag.CategoryList != null)
                    {
                        foreach (HxBlogs.Model.Category item in ViewBag.CategoryList)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    }
                </select>
            </div>
        </div>
        <div class="form-row mb-2 hx-editor">
            <div class="col-md-12 col-sm-12">
                <div id="editor">
                    <textarea name="ContentHtml" class="d-none" ></textarea>
                </div>
                @**@
            </div>
        </div>
        <div class="form-row mb-2" hidden>
            <div class="col-md-12 col-sm-12 col-lg-12">
                <label class="text-left blog-category-label">个人分类:</label>
                <input type="hidden" name="PersonTags" data-count="0" />
                <button type="button" id="@addTag" class="btn btn-link fa fa-plus-square"> 添加分类</button>
            </div>
        </div>
        <div class="form-row mb-2" hidden>
            <div class="col-sm-9 col-md-5" id="@blogTag">
                @if (ViewBag.BlogTagList != null)
                {
                    for (int i = 0; i < ViewBag.BlogTagList.Count; i++)
                    {
                        string guid = Guid.NewGuid().ToString();
                        <div class="custom-control custom-checkbox custom-control-inline col-sm-3 col-xs-6">
                            <input type="checkbox" class="custom-control-input blog-tag" id="@guid" value="@ViewBag.BlogTagList[i].Id" />
                            <label class="custom-control-label hx-control-label" for="@guid">
                                @ViewBag.BlogTagList[i].Name
                            </label>
                        </div>
                    }
                }
            </div>
        </div>
        <div class="form-row mb-2" hidden>
            <div class="col-sm-4 col-xs-12">
                <select class="custom-select" required name="TypeId">
                    <option value="-1" selected="selected">请选择文章类型</option>
                    @if (ViewBag.BlogTypeList != null)
                    {
                        foreach (HxBlogs.Model.BlogType item in ViewBag.BlogTypeList)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    }
                </select>
            </div>
            <div class="col-sm-8 col-xs-12">
                <div class="mt-2 ml-2">
                    <div class="custom-control custom-checkbox custom-control-inline">
                        <input type="checkbox" class="custom-control-input" name="PersonTop" id="PersonTop" value="N" />
                        <label class="custom-control-label hx-control-label" for="PersonTop">
                            个人置顶
                        </label>
                    </div>
                    <div class="custom-control custom-checkbox custom-control-inline">
                        <input type="checkbox" class="custom-control-input" name="IsPrivate" id="IsPrivate" value="N" />
                        <label class="custom-control-label hx-control-label" for="IsPrivate">
                            仅自己可见
                        </label>
                    </div>
                    <div class="custom-control custom-checkbox custom-control-inline">
                        <input type="checkbox" class="custom-control-input" name="CanCmt" id="CanCmt" checked="checked" value="Y" />
                        <label class="custom-control-label hx-control-label" for="CanCmt">
                            允许评论
                        </label>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-row" hidden>
            <div class="col-sm-12">
                <button type="button" value="Y" class="btn btn-md btn-success btn-save">发布文章</button>
                <button type="button" value="N" class="btn btn-secondary btn-md btn-save" style="margin-left: .8rem;">保存草稿</button>
            </div>
        </div>
    </form>
</div>
@section scripts{
    <script src="~/Content/Plugin/editormd/editormd.js"></script>
    <script type="text/javascript">
        var testEditor;
        $(function () {
            $.get('http://localhost:8463/Content/Plugin/editormd/test.md', function (md) {
                testEditor = editormd("editor", {
                    //width: "90%",
                    height: 740,
                    path: '/Content/Plugin/editormd/lib/',
                    theme: "default",
                    previewTheme: "default",
                    //editorTheme: "pastel-on-dark",
                    editorTheme: "default",
                    markdown: md,
                    codeFold: true,
                    toolbarAutoFixed:true,
                    //syncScrolling : false,
                    saveHTMLToTextarea: true,    // 保存 HTML 到 Textarea
                    searchReplace: true,
                    //watch : false,                // 关闭实时预览
                    htmlDecode: "style,script,iframe|on*",            // 开启 HTML 标签解析，为了安全性，默认不开启
                    //toolbar  : false,             //关闭工具栏
                    //previewCodeHighlight : false, // 关闭预览 HTML 的代码块高亮，默认开启
                    emoji: true,
                    taskList: true,
                    tocm: true,         // Using [TOCM]
                    tex: true,                   // 开启科学公式TeX语言支持，默认关闭
                    flowChart: true,             // 开启流程图支持，默认关闭
                    sequenceDiagram: true,       // 开启时序/序列图支持，默认关闭,
                    //dialogLockScreen : false,   // 设置弹出层对话框不锁屏，全局通用，默认为true
                    //dialogShowMask : false,     // 设置弹出层对话框显示透明遮罩层，全局通用，默认为true
                    //dialogDraggable : false,    // 设置弹出层对话框不可拖动，全局通用，默认为true
                    //dialogMaskOpacity : 0.4,    // 设置透明遮罩层的透明度，全局通用，默认值为0.1
                    //dialogMaskBgColor : "#000", // 设置透明遮罩层的背景颜色，全局通用，默认为#fff
                    imageUpload: true,
                    imageFormats: ["jpg", "jpeg", "gif", "png", "bmp", "webp"],
                    imageUploadURL: "./php/upload.php",
                    toolbarIcons: function () {
                        // Or return editormd.toolbarModes[name]; // full, simple, mini
                        // Using "||" set icons align right.
                        //return editormd.toolbarModes["simple"];
                        return ["undo", "redo", "|", "bold", "del", "italic", "ucwords", "uppercase", "lowercase", "|",
                            "h1", "h2", "h3", "h4", "h5", "h6", "|", "list-ul", "list-ol", "hr", "|", "link", "image", "code",
                             "table", "datetime", "emoji","|", "||",
                            "watch", "preview", "fullscreen", "clear", "help"]//"||", "watch", "fullscreen", "preview", "testIcon"]
                    },
                    onfullscreen() {
                        //testEditor.setToolbarAutoFixed(true);
                        $('nav,div.form-row:not(.hx-editor)').hide();
                        //this.toolbar.css('margin-top', 'auto');
                        //this.resize();
                    },
                    onfullscreenExit() {
                        $('nav,div.form-row:not(.hx-editor)').show();
                        this.width('100%');
                    },
                    onload: function () {                                                                              
                        $('div[hidden]').removeAttr('hidden'); 
                        var me = this,
                            state = me.state,
                            editor = me.editor,
                            toolbar = me.toolbar,
                            settings = me.settings,
                            $window = $(window);
                        var autoFixedHandle = function () {
                            var top = $window.scrollTop();
                            if (!settings.toolbarAutoFixed) {
                                return false;
                            }
                            if (top - editor.offset().top > -8 && top < editor.height() && !state.fullscreen) {
                                
                                toolbar.css({
                                    'margin-top': '3rem',
                                    position: "fixed",
                                    width: editor.width() + "px",
                                    left: ($window.width() - editor.width()) / 2 + "px"
                                });
                            }
                            else {
                                toolbar.css({
                                    'margin-top': 'auto',
                                    position: "absolute",
                                    width: "100%",
                                    left: 0
                                });
                            }
                        };
                        if (!state.fullscreen && !state.preview && settings.toolbar && settings.toolbarAutoFixed) {
                            $(window).bind("scroll", autoFixedHandle);
                        }
                        $window.resize(function () {
                            if (state.fullscreen) {
                                editor.css({
                                    width: $window.width(),
                                    height: $window.height()
                                });
                                me.resize();
                            }
                        })
                    }
                });
            });
        });
    </script>
}
