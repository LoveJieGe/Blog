<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Reflection" #>
<#@ assembly name="$(SolutionDir)\HxBlogs.Model\bin\Debug\HxBlogs.Model.dll" #>
<#@ output extension=".cs" #>
using HxBlogs.IBLL;
using HxBlogs.Model;
using HxBlogs.IDAL;
namespace HxBlogs.BLL
{
<#
	Type baseType = typeof(HxBlogs.Model.BaseModel);
	Assembly assembly = Assembly.GetAssembly(baseType);
	Type[] types = assembly.GetExportedTypes();
	List<string> classList = new List<string>();
    foreach (Type type in types)
    {
        if (baseType.IsAssignableFrom(type) && !type.IsAbstract)
        {
            classList.Add(type.Name);
        }
    }
	foreach(string name in classList)
	{
#>
	public partial class <#=name#>Service:BaseService<<#=name#>>,I<#=name#>Service
	{
		private I<#=name#>Dal _dal;
		public <#=name#>Service(I<#=name#>Dal dal)
        {
			this._dal = dal;
			this.baseDal = dal;
        }
	}
<#}#>
}